Index: src/main/java/lexical/Executor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package lexical;\n\nimport exceptions.lexical.LexicalException;\nimport reader.StringReader;\nimport logger.ConsoleLogger;\nimport logger.Logger;\n\nimport java.util.List;\nimport java.util.ArrayList;\npublic class Executor {\n    public static void main(String[] args) {\n        Lexical lexical = new LexicalAnalyzer(new StringReader(\": struct, impl, else, false, if, ret, while, true, nil, false,\\n\" +\n                \"new, fn, st, pri, self, void, hola pepe como estas\"));\n        Logger log = new ConsoleLogger();\n        try {\n            List<Token> tokens = new ArrayList<Token>();\n            while (!lexical.isEndOfFile()) {\n                tokens.add(lexical.nextToken());\n            }\n\n            log.LogLexicSuccess(tokens);\n        } catch (LexicalException e) {\n            log.LogLexicError(e);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/lexical/Executor.java b/src/main/java/lexical/Executor.java
--- a/src/main/java/lexical/Executor.java	(revision 0d6eb01c67807033c42fab73f2c926d3640e69e0)
+++ b/src/main/java/lexical/Executor.java	(date 1710360653016)
@@ -9,13 +9,15 @@
 import java.util.ArrayList;
 public class Executor {
     public static void main(String[] args) {
-        Lexical lexical = new LexicalAnalyzer(new StringReader(": struct, impl, else, false, if, ret, while, true, nil, false,\n" +
-                "new, fn, st, pri, self, void, hola pepe como estas"));
+
+        Lexical lexical = new LexicalAnalyzer(new StringReader("====<>==<+++"));
         Logger log = new ConsoleLogger();
         try {
-            List<Token> tokens = new ArrayList<Token>();
-            while (!lexical.isEndOfFile()) {
-                tokens.add(lexical.nextToken());
+            List<Token> tokens = new ArrayList<>();
+            Token token = lexical.nextToken();
+            while (!lexical.isEndOfFile() && token != null) {
+                tokens.add(token);
+                token = lexical.nextToken();
             }
 
             log.LogLexicSuccess(tokens);
