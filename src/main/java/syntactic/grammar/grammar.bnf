⟨program⟩ ::= ⟨Lista-Definiciones⟩ ⟨Start⟩
⟨Start⟩ ::= start ⟨Bloque-Método⟩
⟨Lista-Definiciones⟩ ::= ⟨Struct⟩ ⟨Lista-Definiciones⟩ | ⟨Impl⟩ ⟨Lista-Definiciones⟩ | λ
⟨Struct⟩ ::= struct idStruct ⟨Herencia⟩ { ⟨Struct-Atributo⟩ } | struct idStruct { ⟨Struct-Atributo⟩ }
⟨Struct-Atributo⟩ ::= ⟨Atributo⟩ ⟨Struct-Atributo⟩ | λ
⟨Atributo⟩ ::= ⟨Visibilidad⟩ ⟨Tipo⟩ ⟨Lista-Declaración-Variables⟩ ; | ⟨Tipo⟩ ⟨Lista-Declaración-Variables⟩ ;
⟨Impl⟩ ::= impl idStruct { ⟨Miembro⟩ ⟨Miembro-Opcional⟩ } 
⟨Miembro-Opcional⟩ ::= ⟨Miembro⟩ | λ
⟨Herencia⟩ ::= : ⟨Tipo⟩
⟨Miembro⟩ ::= ⟨Método⟩ | ⟨Constructor⟩
⟨Constructor⟩ ::= . ⟨Argumentos-Formales⟩ ⟨Bloque-Método⟩
⟨Método⟩ ::= ⟨Forma-Método⟩ fn idMetAt ⟨Argumentos-Formales⟩ -⟩ ⟨Tipo-Método⟩ ⟨Bloque-Método⟩ | fn idMetAt ⟨Argumentos-Formales⟩ -⟩ ⟨Tipo-Método⟩ ⟨Bloque-Método⟩
⟨Visibilidad⟩ ::= pri
⟨Forma-Método⟩ ::= st
⟨Bloque-Método⟩ ::= { ⟨Decl-Var-Locales-Metodo⟩ ⟨Sentencia-Metodo⟩ }
⟨Decl-Var-Locales-Metodo⟩ ::= ⟨Decl-Var-Locales⟩ ⟨Decl-Var-Locales-Metodo⟩ | λ
⟨Sentencia-Metodo⟩ ::= ⟨Sentencia⟩ ⟨Sentencia-Metodo⟩ | λ
⟨Decl-Var-Locales⟩ ::= ⟨Tipo⟩ ⟨Lista-Declaración-Variables⟩ ;
⟨Lista-Declaración-Variables⟩::= idMetAt | idMetAt , ⟨Lista-Declaración-Variables⟩
⟨Argumentos-Formales⟩::= ( ) | ( ⟨Lista-Argumentos-Formales⟩ )
⟨Lista-Argumentos-Formales⟩ ::= ⟨Argumento-Formal⟩ , ⟨Lista-Argumentos-Formales⟩ | ⟨Argumento-Formal⟩
⟨Argumento-Formal⟩ ::= ⟨Tipo⟩ idMetAt
⟨Tipo-Método⟩ ::= ⟨Tipo⟩ | void
⟨Tipo⟩ ::= ⟨Tipo-Primitivo⟩ | ⟨Tipo-Referencia⟩ | ⟨Tipo-Arreglo⟩
⟨Tipo-Primitivo⟩ ::= Str | Bool |Int | Char
⟨Tipo-Referencia⟩ ::= idStruct
⟨Tipo-Arreglo⟩ ::= Array ⟨Tipo-Primitivo⟩
⟨Sentencia⟩ ::= ; | ⟨Asignación⟩; | ⟨Sentencia-Simple⟩; | if ( ⟨Expresión⟩ ) ⟨Sentencia⟩ | if ( ⟨Expresión⟩ ) ⟨Sentencia⟩ else ⟨Sentencia⟩ | while ( ⟨Expresión⟩ ) ⟨Sentencia⟩ | ⟨Bloque⟩ | ret ⟨Expresión⟩ ; | ret ;
⟨Bloque⟩ ::= { ⟨Sentencia-Bloque⟩ }
⟨Sentencia-Bloque⟩ ::= ⟨Sentencia⟩ ⟨Sentencia-Bloque⟩ | λ
⟨Asignación⟩ ::= ⟨AccesoVar-Simple⟩ = ⟨Expresión⟩ | ⟨AccesoSelf-Simple⟩ = ⟨Expresión⟩
⟨AccesoVar-Simple⟩ ::= id ⟨Encadenados-Simples⟩ | id [ ⟨Expresión⟩ ]
⟨Encadenados-Simples⟩ ::= ⟨Encadenado-Simple⟩ ⟨Encadenados-Simples⟩ | λ
⟨Encadenado-Simple⟩ ::= . id ⟨Encadenado-Simple⟩
⟨AccesoSelf-Simple⟩ ::= self ⟨Encadenados-Simples⟩
⟨Sentencia-Simple⟩ ::= ( ⟨Expresión⟩ )
⟨Expresión⟩ ::= ⟨ExpOr⟩
⟨ExpOr⟩ ::= ⟨ExpOr⟩ or ⟨ExpAnd⟩ | ⟨ExpAnd⟩
⟨ExpAnd⟩ ::= ⟨ExpAnd⟩ && ⟨ExpIgual⟩ | ⟨ExpIgual⟩
⟨ExpIgual⟩ ::= ⟨ExpIgual⟩ ⟨OpIgual⟩ ⟨ExpCompuesta⟩ | ⟨ExpCompuesta⟩
⟨ExpCompuesta⟩ ::= ⟨ExpAd⟩ ⟨OpCompuesto⟩ ⟨ExpAd⟩ | ⟨ExpAd⟩
⟨ExpAd⟩ ::= ⟨ExpAd⟩ ⟨OpAd⟩ ⟨ExpMul⟩ | ⟨ExpMul⟩
⟨ExpMul⟩ ::= ⟨ExpMul⟩ ⟨OpMul⟩ ⟨ExpUn⟩ | ⟨ExpUn⟩
⟨ExpUn⟩ ::= ⟨OpUnario⟩ ⟨ExpUn⟩ | ⟨Operando⟩
⟨OpIgual⟩ ::= == | !=
⟨OpCompuesto⟩ ::= < | > | <= | >=
⟨OpAd⟩ ::= + | -
⟨OpUnario⟩ ::= + | - | ! | ++ |--
⟨OpMul⟩ ::= * | / | %
⟨Operando⟩ ::= ⟨Literal⟩ | ⟨Primario⟩ ⟨Encadenado⟩ | ⟨Primario⟩
⟨Literal⟩ ::= nil | true | false | intLiteral | StrLiteral | charLiteral
⟨Primario⟩ ::= ⟨ExpresionParentizada⟩ | ⟨AccesoSelf⟩ | ⟨AccesoVar⟩ | ⟨Llamada-Método⟩ | ⟨Llamada-Método-Estático⟩ | ⟨Llamada-Constructor⟩ 
⟨ExpresionParentizada⟩ ::= ( ⟨Expresion⟩ ) ⟨Encadenado⟩ | ( ⟨Expresion⟩ )
⟨AccesoSelf⟩ ::= self ⟨Encadenado⟩ | self
⟨AccesoVar⟩ ::= id ⟨Encadenado⟩ | id | id [ ⟨Expresión⟩ ] ⟨Encadenado⟩ | id [ ⟨Expresión⟩ ]
⟨Llamada-Método⟩ ::= id ⟨Argumentos-Actuales⟩ ⟨Encadenado⟩ | id ⟨Argumentos-Actuales⟩ 
⟨Llamada-Método-Estático⟩ ::= idStruct . ⟨Llamada-Método⟩ ⟨Encadenado⟩ | idStruct . ⟨Llamada-Método⟩
⟨Llamada-Constructor⟩ ::= new idStruct ⟨Argumentos-Actuales⟩ ⟨Encadenado⟩ | new idStruct ⟨Argumentos-Actuales⟩ | new ⟨Tipo-Primitivo⟩ [ ⟨Expresion⟩ ]
⟨Argumentos-Actuales⟩ ::= ( ⟨Lista-Expresiones⟩ ) | ( )
⟨Lista-Expresiones⟩ ::= ⟨Expresión⟩ | ⟨Expresión⟩ , ⟨Lista-Expresiones⟩
⟨Encadenado⟩ ::= . ⟨Llamada-Método-Encadenado⟩ | . ⟨Acceso-Variable-Encadenado⟩
⟨Llamada-Método-Encadenado⟩ ::= id ⟨Argumentos-Actuales⟩ ⟨Encadenado⟩ | id ⟨Argumentos-Actuales⟩
⟨Acceso-Variable-Encadenado⟩ ::= id ⟨Encadenado⟩ | id | id [ ⟨Expresión⟩ ]⟨Encadenado⟩ | id [ ⟨Expresión⟩ ]

